server.port=8060
spring.main.banner-mode=off
logging.level.root=warn
#============== kafka ===================
#指定集群节点
spring.kafka.bootstrap-servers=10.19.154.187:9092,10.19.154.188:9092,10.19.154.189:9092,10.19.154.191:9092,10.19.154.192:9092
#指定消费组
spring.kafka.consumer.group-id=test2-consumer-group
#kafka 消费是否自定 确认提交
spring.kafka.consumer.enable-auto-commit=true
#自动确认时间间隔
spring.kafka.consumer.auto-commit-interval=1000
#指定producer的消费学序列化
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
#指定kafka的消费序列化方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#如果主题没有注册，直接注册监听会出错
spring.kafka.listener.missing-topics-fatal=false

#kafka在broker上配置分区信息partitions-topic.json文件 http://ddrv.cn/a/262961
#https://blog.csdn.net/LLQ_200/article/details/102796859
#https://www.jianshu.com/c/0c9d83802b0c
#https://www.jianshu.com/p/aa196f24f332
#客户端实现分区
#https://blog.csdn.net/chihujiang3132/article/details/100929975?depth_1-utm_source=distribute.pc_relevant.none-task&utm_source=distribute.pc_relevant.none-task
#kafka 工具使用 https://www.cnblogs.com/ysocean/p/9860880.html
#https://blog.frognew.com/2019/07/spring-boot-kafka.html
#kafka消费方式实现： https://ailijie.top/archives/kafka
#kafka基本命令操作： https://baijiahao.baidu.com/s?id=1627395929607903885&wfr=spider&for=pc