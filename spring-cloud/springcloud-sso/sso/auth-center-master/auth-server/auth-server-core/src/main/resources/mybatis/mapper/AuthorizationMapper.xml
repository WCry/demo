<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lingchaomin.auth.server.core.role.dao.AuthorizationDao">

    <sql id="table">authorization</sql>

    <sql id="fileds">
        id
        ,gmt_create
        ,gmt_modified
        ,user_id
        ,app_id
        ,role_ids
    </sql>

    <resultMap id="authorizationRm" type="authorization">
        <id property="id" column="id"/>
        <result property="gmtCreate" column="gmt_create"/>
        <result property="gmtModified" column="gmt_modified"/>
        <result property="userId" column="user_id"/>
        <result property="appId" column="app_id"/>
        <result property="roleIds" column="role_ids"/>
    </resultMap>

    <resultMap id="authorizationListDtoRm" type="authorizationListDto">
        <id property="id" column="id"/>
        <result property="userId" column="user_id"/>
        <result property="appId" column="app_id"/>
        <result property="roleIds" column="role_ids"/>
        <result property="userNick" column="user_nick"/>
        <result property="appName" column="app_name"/>
    </resultMap>

    <select id="countAll" resultType="long">
        SELECT COUNT(1) FROM
        <include refid="table"/>
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(1) FROM
        <include refid="table"/> as au
        LEFT JOIN
        user u
        ON
        au.user_id=u.user_id
        LEFT JOIN
        app a
        ON
        au.app_id=a.id
        <where>
            <if test="searchValue!=null">u.user_nick LIKE CONCAT("%",#{searchValue},"%") OR  a.name LIKE CONCAT("%",#{searchValue},"%")</if>
        </where>
    </select>

    <select id="selectById" parameterType="long" resultMap="authorizationRm">
        SELECT
        <include refid="fileds"/>
        FROM
        <include refid="table"/>
        WHERE id = #{id}
    </select>

    <select id="findByUserIdAndAppId" resultMap="authorizationRm">
        SELECT
        <include refid="fileds"/>
        FROM
        <include refid="table"/>
        <where>
            <if test="userId!=null">user_id=#{userId}</if>
            <if test="appId!=null">AND app_id=#{appId}</if>
        </where>
    </select>

    <select id="selectAll" resultMap="authorizationListDtoRm">
        SELECT
        au.*,u.user_nick,a.name as app_name
        FROM
        <include refid="table"/> au
        LEFT JOIN
        user u
        ON
        au.user_id=u.user_id
        LEFT JOIN
        app a
        ON
        au.app_id=a.id
        <where>
            <if test="searchValue!=null">u.user_nick LIKE CONCAT("%",#{searchValue},"%") OR  a.name LIKE CONCAT("%",#{searchValue},"%")</if>
        </where>
    </select>

    <select id="selectByRoleId" resultMap="authorizationRm">

        SELECT
        <include refid="fileds"/>
        FROM
        <include refid="table"/>

        WHERE role_ids like CONCAT("%",#{roleId},"%")

    </select>

    <insert id="insert" parameterType="authorization" useGeneratedKeys="true" keyProperty="id">
        INSERT IGNORE INTO
        <include refid="table"/>
        (
        <include refid="fileds"/>
        )
        VALUES
        (null,#{gmtCreate},#{gmtModified},#{userId},#{appId},#{roleIds})
    </insert>

    <update id="update" parameterType="authorization">
        UPDATE
        <include refid="table"/>
        <set>
            <if test="roleIds">role_ids=#{roleIds},</if>
        </set>
        WHERE id=#{id} and app_id=#{appId}
    </update>

    <update id="updateBatch" parameterType="list">
        <foreach collection="list" item="item" index="index" separator=";"
                 open="" close="">
            UPDATE
            <include refid="table"/>
            <set>
                <if test="item.roleIds!=null">role_ids=#{item.roleIds}</if>
            </set>
            WHERE id=#{item.id}
        </foreach>
    </update>

    <delete id="deleteById">
        DELETE FROM
        <include refid="table"/>
        WHERE id = #{id}
    </delete>

    <delete id="deleteByUserId">
        DELETE FROM
        <include refid="table"/>
        WHERE user_id = #{userId}
    </delete>

    <delete id="deleteByAppId">
        DELETE FROM
        <include refid="table"/>
        WHERE app_id = #{appId}
    </delete>
</mapper>