spring.cloud.sentinel.transport.dashboard=10.19.154.188:8180
spring.cloud.sentinel.eager=true
spring.application.name=admin-client
spring.mvc.servlet.load-on-startup=1
server.port=8768
# 下面是配置undertow作为服务器的参数
# 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接, 默认设置每个CPU核心一个线程
# 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程,它的值设置取决于系统的负载
# 以下的配置会影响buffer,这些buffer会用于服务器连接的IO操作,有点类似netty的池化内存管理
# 每块buffer的空间大小,越小的空间被利用越充分
server.undertow.buffer-size=1024
server.undertow.direct-buffers=true
server.undertow.io-threads=4
server.undertow.worker-threads=80
#springboot 的安全状态管理
management.endpoints.web.exposure.exclude=*
management.endpoint.health.show-details=always
#securerandom:
logging.level.root=info
#数据库链接配置
spring.datasource.url=jdbc:mariadb://10.19.132.30:3306/gpf?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.username=root
spring.datasource.password=88075998
# springdatajpa
#打印出自动生产的SQL，方便调试的时候查看
spring.jpa.show-sql=true
#更新数据库表结构
spring.jpa.hibernate.ddl-auto=update
#对打印的sql进行格式化，方便查看
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.use_sql_comments=true
#指定生成表名的存储引擎为InneoDB
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MariaDB53Dialect